{"version":3,"file":"static/js/757.d5fc8126.chunk.js","mappings":"oOAIe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GACtCD,IAILE,EAAAA,EAAAA,IAAiBF,GACdG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAKA,EAAKC,cACR,OAAOC,MAAM,uBAAD,OAAwBR,IAEtCL,EAASW,EAAKG,YAEfC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACd,IAaJ,OACE,4BACE,kBAAMiB,SAbW,SAAAC,GACnB,IAAMC,EAAaD,EAAEE,OAAO,GAAGC,MAE/B,GADAH,EAAEI,iBACiB,KAAfH,EACF,OAAOR,MACL,wEAGJV,EAAgB,CAAEE,MAAOgB,KAKvB,WACE,kBAAOI,KAAK,UACZ,mBAAQA,KAAK,SAAb,wBAEF,wBACG1B,EAAM2B,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAArB,SAA4BD,KADrBC,a,6KC5CnB,IAAME,EAAU,mCACHC,EAAW,kCAEjB,SAASC,IACd,OAAOC,MAAM,2DAAD,OACiDH,IAIxD,SAASI,EAAkBN,GAChC,OAAOK,MAAM,sCAAD,OAC4BL,EAD5B,oBAC0CE,EAD1C,oBAKP,SAASK,EAAiBP,GAC/B,OAAOK,MAAM,sCAAD,OAC4BL,EAD5B,4BACkDE,EADlD,oBAKP,SAASM,EAAaR,GAC3B,OAAOK,MAAM,sCAAD,OAC4BL,EAD5B,4BACkDE,EADlD,2BAKP,SAASvB,EAAiBgB,GAC/B,OAAOU,MAAM,qDAAD,OAC2CH,EAD3C,iCAC2EP,EAD3E","sources":["components/pages/Movies/index.jsx","services/index.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../../services/index';\n\nexport default function Movies() {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) {\n      return;\n    }\n\n    fetchSearchMovie(query)\n      .then(res => res.json())\n      .then(info => {\n        if (!info.total_results) {\n          return alert(`Sorry we dont found ${query}`);\n        }\n        setFilms(info.results);\n      })\n      .catch(error => console.log(error));\n  }, [searchParams]);\n\n  const onFormSubmit = e => {\n    const inputValue = e.target[0].value;\n    e.preventDefault();\n    if (inputValue === '') {\n      return alert(\n        'Sorry, but we dont can find empty string, you shoud write something)'\n      );\n    }\n    setSearchParams({ query: inputValue });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <input type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {films.map(({ original_title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>{original_title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","const API_KEY = 'e58a02e4215cc04ce0b4af905ce50db3';\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function fetchTrending() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieActors(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviews(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchSearchMovie(value) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n  );\n}\n"],"names":["Movies","useState","films","setFilms","useSearchParams","searchParams","setSearchParams","useEffect","query","get","fetchSearchMovie","then","res","json","info","total_results","alert","results","catch","error","console","log","onSubmit","e","inputValue","target","value","preventDefault","type","map","original_title","id","to","API_KEY","BASE_URL","fetchTrending","fetch","fetchMovieDetails","fetchMovieActors","fetchReviews"],"sourceRoot":""}